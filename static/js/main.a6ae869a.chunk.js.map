{"version":3,"sources":["Components/Slices/RegSlice.js","Components/Slices/TestSlice.js","Store/Store.js","logo.svg","Components/Registration/Registration.js","Components/Layout/Footer/Footer.js","Components/home/Home.js","Components/Registration/RegForm2.js","Components/Registration/RegForm1.js","App.js","reportWebVitals.js","index.js"],"names":["RegSlice","createSlice","name","initialState","reducers","setUserData","state","action","register","payload","regData","console","log","extraReducers","actions","TestSlice","fname","lname","email","pass","phone","city","zip","message","error","formCounter","setTestSliceData","configureStore","reducer","userdata","SetUserReducer","TestReducer","Registration","history","useHistory","useState","ClickCounter","setClickCounter","dispatch","useDispatch","data","localData","setlocalData","selector","useSelector","formik","useFormik","initialValues","validate","ContactData","errors","length","isNaN","onSubmit","values","AbuttonStyle","setAButtonStyle","BbuttonStyle","setBButtonStyle","CbuttonStyle","setCButtonStyle","AloaderDiv","setAloaderDiv","BloaderDiv","setBloaderDiv","CloaderDiv","setCloaderDiv","setDisabledTrue","Goto","val","setErrors","className","Container","style","marginBottom","Row","marginTop","padding","Col","Button","onClick","variant","backgroundColor","borderColor","Form","handleSubmit","Group","controlId","Label","Control","type","placeholder","onChange","handleChange","value","touched","push","alert","Footer","Card","Body","Text","Home","validate_email","RegExp","test","width","sm","lg","md","height","to","textDecoration","RegForm2","props","RegForm1","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a6ae869a.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n \n\n \n \n\nexport const RegSlice = createSlice({\n  name: 'register',\n  initialState: {\n  //  fname:null,\n  // lname:null,\n  //  email:null,\n  // pass:null,\n  //  message:null,\n  //  error:null,\n \n},\n  reducers: {\n    setUserData : (state,action) => {\n \n         state.register=action.payload\n         let regData=state.register\n         console.log(regData)\n        \n       \n\n   \n\n\n\n      // axios.post('https://nodeprojectapi.herokuapp.com/register',regData).then(res=>{\n      //   console.log(res.data);\n      // }).catch(err=>{console.log(err);})\n\n\n    },\n   extraReducers:{\n     \n\n\n   }\n\n\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { setUserData } = RegSlice.actions\n\n  \n\nexport default RegSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\n \n\nconst initialState = {\n    fname:null,\n    lname:null,\n     email:null,\n    pass:null,\n    phone:null,\n    state:null,\n    city:null,\n    zip:null,\n     message:null,\n     error:null,\n     formCounter:null\n  \n}\n\nconst TestSlice = createSlice({\n    name: 'register',\n    initialState,\n    reducers: {\n        setTestSliceData : (state,action) => {\n \n            //  state.register=action.payload\n            //  let regData=state.register\n            //  console.log(regData)\n            \n    //  if(action.payload.formCounter==1 ){\n              state.fname=action.payload.fname\n            state.lname=action.payload.lname\n            state.email=action.payload.email\n            state.pass=action.payload.pass\n            state.phone=action.payload.phone\n              \n        // }\n        //    else if(action.payload.formCounter==2 )\n        //     {\n                state.zip=action.payload.zip\n                state.state=action.payload.state\n                state.city=action.payload.city\n                state.formCounter=action.payload.formCounter\n            // }\n \n        \n        }\n    \n    \n    }\n});\n\nexport const {setTestSliceData} = TestSlice.actions\nexport default TestSlice.reducer","import { configureStore } from \"@reduxjs/toolkit\";\n \nimport SetUserReducer from \"../Components/Slices/RegSlice\";\n  import setTestSliceData from '../Components/Slices/TestSlice'\n\nexport default configureStore({\n  reducer: {\n    userdata:SetUserReducer,\n    TestReducer:setTestSliceData\n  }  \n})","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useEffect} from 'react'\nimport { Col,Row,Button,Container , Form, FormFloating } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n// import {Link} from 'react-router-dom'\nimport {useFormik,Field} from 'formik'\nimport './Registration.css'\n\n// import RegForm1 from './RegForm1'\n// import RegForm2 from './RegForm2'\n\nimport { setUserData } from '../Slices/RegSlice'\nimport {setTestSliceData} from '../Slices/TestSlice'\nimport { useDispatch ,useSelector} from 'react-redux'\n\n\nexport default function Registration() {\n   \n  // let ClickCounter=0\nlet history=useHistory()\n  let [ClickCounter,setClickCounter]=useState(0)\n\nconst dispatch=useDispatch()\n \n  let [localData,setlocalData]=useState({\n     data:{}\n  })\n  \n \n \nlet validateData=(ContactData)=>{\n  // console.log(ContactData);\n  \n  const errors={};\n  if(!ContactData.fname){\n    errors.fname=\"Name Can Not be Blank!\"\n  }\n  if(!ContactData.lname){\n    errors.lname=\"Name Can Not be Blank!\"\n  }\n\n  if (!ContactData.email)\n  {\n         errors.email=\"Email Can not be blank\"\n  }\n  \n  if (!ContactData.pass)\n  {\n         errors.pass=\"Password Can not be blank\"\n  }\n  else if( ContactData.pass.length<5)\n  {\n      errors.pass=\"password too short. should be at least 5 characters\"\n  \n  }\n\n  if(isNaN(ContactData.phone)){\n    errors.phone=\"Phone number must be numerical\"\n  }\n else if(ContactData.phone.length<10)\n {\n  errors.phone=\"Phone number must at least 10 digits\"\n }\n// if(!ContactData.state)\n// {\n//   errors.state=\"State Name Can not be blank\"\n// }\n// if(!ContactData.city)\n// {\n//   errors.city=\"City Name Can not be blank\"\n// }\n// if(!ContactData.zip)\n// {\n//   errors.zip=\"Zipcode Can not be blank\"\n// }\n// else if(isNaN(ContactData.zip)==true)\n// {\n//   errors.zip=\"Zipcode must be a number\"\n// }\n\n \n \n  return errors\n}\n\n \n\n\n  let selector=useSelector(state=>state.TestReducer)\n//userdata is from Store.js . IT is a reducer name\n\n\n\n\n\n\n\n\n \n\n\n\n\n \n  const formik=useFormik({\n    initialValues:{\n            fname:\"\",\n            lname:\"\",\n            email:\"\",\n            phone:\"\",\n            pass:\"\",\n            state:\"\",\n            city:\"\",\n            zip:\"\",\n            formCounter:\"1\"\n           \n    },\n    validate:validateData, \n    onSubmit:(values)=>{\n  //  console.log(\"value\");\n    setlocalData({...localData.data=values})\n   \n \n  \n      // dispatch(setUserData(values))\n      dispatch(setTestSliceData(values))\n      \n    }\n});\n \n\n \nlet[AbuttonStyle,setAButtonStyle]=useState(\"green\")\nlet[BbuttonStyle,setBButtonStyle]=useState(\"\")\nlet[CbuttonStyle,setCButtonStyle]=useState(\"\")\n\nlet[AloaderDiv,setAloaderDiv]=useState(\"transparent\")\nlet[BloaderDiv,setBloaderDiv]=useState(\"transparent\")\nlet[CloaderDiv,setCloaderDiv]=useState(\"transparent\")\n\n\nlet [DisabledTrue,setDisabledTrue]=useState(\"false\")\nlet Goto=(val)=>{\n   setClickCounter(val)\n  \n//  console.log(val);\n  formik.setErrors({})\nif(val==1)\n{\nsetBButtonStyle(\"green\")\nsetBloaderDiv(\"\")\nsetAloaderDiv(\"\")\nsetCButtonStyle(\" \")\nsetCloaderDiv(\"transparent\")\nsetDisabledTrue(\"false\")\n}\nelse if(val==2){\nsetCButtonStyle(\"green\")\nsetCloaderDiv(\"\")\n\n}\nelse if (val==0){\nsetAButtonStyle(\"green\")\nsetAloaderDiv(\"\")\nsetBButtonStyle(\"\")\nsetBloaderDiv(\"transparent\")\nsetCButtonStyle(\"\")\nsetCloaderDiv(\"transparent\")\n} \n\n}\n\n\n  return (\n    \n        <div className=\"Registration\"> \n<Container style={{marginBottom:\"0%\"}}>\n  <Row style={{marginTop:\"50px\", padding:\"0px\"}}>\n    <Col><Button onClick={()=>{Goto(0)}} variant=\"outline-secondary\" style={{backgroundColor:\"\", borderColor:AbuttonStyle}}>Step 1</Button></Col>\n    <Col><Button onClick={()=>{Goto(1)}} variant=\"outline-secondary\" style={{backgroundColor:\"\", borderColor:BbuttonStyle}}>Step 2</Button></Col>\n    <Col><Button onClick={()=>{Goto(3)}} variant=\"outline-secondary\" style={{backgroundColor:\"\", borderColor:CbuttonStyle}}>Step 3</Button></Col>\n  </Row>\n  <Row>\n<Col><div className=\"Step2Step\" style={{backgroundColor:AloaderDiv}}> </div></Col>\n<Col><div className=\"Step2Step\" style={{backgroundColor:BloaderDiv}}> </div></Col>\n<Col><div className=\"Step2Step\" style={{backgroundColor:CloaderDiv}}> </div></Col>\n</Row>\n\n</Container>\n    {ClickCounter==0? \n  \n    <Container className=\"Registration_Container\"> \n            <Row className=\"Registration_Container_Row\">\n      \n                 <Form onSubmit={formik.handleSubmit}>  \n\n\n  <Form.Group className=\"mb-3\" controlId=\"fname\">\n    <Form.Label>Firstname</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Firstname\" onChange={formik.handleChange} value={selector.fname}   />\n  </Form.Group>\n  <p className=\"errorFontSize\">\n    {formik.touched.fname && formik.errors.fname ? <span>{formik.errors.fname}</span> : \"\"}\n</p>\n\n  <Form.Group className=\"mb-3\" controlId=\"lname\">\n    <Form.Label>Lastname</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Lastname\" onChange={formik.handleChange} value={selector.lname}  />\n  </Form.Group>\n  <p className=\"errorFontSize\">\n    {formik.touched.lname && formik.errors.lname ? <span>{formik.errors.lname}</span> : \"\"}\n</p>\n\n  <Form.Group className=\"mb-3\" controlId=\"email\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" onChange={formik.handleChange} value={selector.email}  />\n  </Form.Group>\n  <p className=\"errorFontSize\">\n    {formik.touched.email && formik.errors.email ? <span>{formik.errors.email}</span> : \"\"}\n</p> \n\n  <Form.Group className=\"mb-3\" controlId=\"phone\">\n    <Form.Label>Phone</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Phone number\"  onChange={formik.handleChange} value={selector.phone} />\n  </Form.Group>\n  <p className=\"errorFontSize\">\n    {formik.touched.phone && formik.errors.phone ? <span>{formik.errors.phone}</span> : \"\"}\n</p>\n\n  <Form.Group className=\"mb-3\" controlId=\"pass\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" onChange={formik.handleChange}  value={selector.pass} />\n  </Form.Group>\n  <p className=\"errorFontSize\">\n    {formik.touched.pass && formik.errors.pass ? <span>{formik.errors.pass}</span> : \"\"} \n</p>\n\n\n  <Button className=\"BtnSubmit\" variant=\"outline-success\" type=\"submit\" >\n    Submit\n  </Button>\n\n</Form> \n\n\n{/* <Button className=\"BtnNext\" variant=\"outline-primary\" type=\"click\" onClick={()=>{setClickCounter(ClickCounter+1 )}}> */}\n<Button className=\"BtnNext\" variant=\"outline-primary\" type=\"click\" onClick={()=>{Goto(1)}}     >\n    Next\n  </Button>\n  <Button className=\"BtnHome\" variant=\"outline-warning\" type=\"click\" onClick={()=>{history.push('/')}}>\n    Go Back To Home\n  </Button>  \n            </Row>\n\n            </Container>\n \n\n            \n  : \n<>\n{ClickCounter==1 ? \n\n<div> \n    <div >\n\n                \n<Container className=\"Registration_Container\"> \n<Row className=\"Registration_Container_Row\">\n<h1>Step 2</h1>\n<Form onSubmit={formik.handleSubmit}>  \n\n\n<Form.Group className=\"mb-3\" controlId=\"state\">\n<Form.Label>State</Form.Label>\n<Form.Control type=\"text\" placeholder=\"Enter State\" onChange={formik.handleChange} />\n</Form.Group>\n<p className=\"errorFontSize\">\n    {formik.touched.state && formik.errors.state ? <span>{formik.errors.state}</span> : \"\"}\n</p>\n\n<Form.Group className=\"mb-3\" controlId=\"city\">\n<Form.Label>City</Form.Label>\n<Form.Control type=\"text\" placeholder=\"Enter City\" onChange={formik.handleChange}  />\n</Form.Group>\n<p className=\"errorFontSize\">\n    {formik.touched.city && formik.errors.city ? <span>{formik.errors.city}</span> : \"\"}\n</p>\n\n\n<Form.Group className=\"mb-3\" controlId=\"zip\">\n<Form.Label>Zipcode</Form.Label>\n<Form.Control type=\"text\" placeholder=\"Enter Zipcode\" onChange={formik.handleChange}   />\n</Form.Group>\n<p className=\"errorFontSize\">\n    {formik.touched.zip && formik.errors.zip ? <span>{formik.errors.zip}</span> : \"\"}\n</p>\n\n<Button className=\"BtnSubmit\" variant=\"outline-success\" type=\"submit\"  >\nSubmit\n</Button>\n\n\n</Form> \n<Button className=\"BtnNext\" variant=\"outline-primary\" type=\"click\" onClick={()=>{Goto(0)}} >\n    Prev\n  </Button>\n  <Button className=\"BtnNext\" variant=\"outline-primary\" type=\"click\" onClick={()=>{Goto(2)}} >\n    Next\n  </Button>\n  <Button className=\"BtnHome\" variant=\"outline-warning\" type=\"click\" onClick={()=>{history.push('/')}}  >\nGo Back To Home\n</Button>  \n</Row>\n</Container>\n\n</div>\n \n\n\n  </div> :\n  \n  <div>\n \n <Container className=\"Registration_Container\">   \n <div className=\"Registration_Container_ShowDetails\">\n\n\n  <span>Details Taken</span>\n\n<p/>   <Button variant=\"outline-primary\" onClick={()=>alert(\"Data Saved\"+ selector.fname)}> Submit</Button>\n\n<div style={{marginTop:\"40px\" }}>\n<p> FirstName: {selector.fname}</p>\n<p> LastName: {selector.lname}</p>\n<p> Email: {selector.email}</p>\n<p> Phone: {selector.phone}</p>\n<p> City: {selector.city}</p>\n<p> State: {selector.state}</p>\n<p> Zipcode: {selector.zip}</p>\n</div>\n\n\n\n</div>\n<Button className=\"BtnNext\" variant=\"outline-primary\" type=\"click\" onClick={()=>{Goto(1)}} >\n    Prev\n  </Button>\n<Button className=\"BtnHome\" variant=\"outline-warning\" type=\"click\" onClick={()=>{history.push('/')}}>\nGo Back To Home\n</Button> \n</Container>\n  </div>}\n\n </>\n\n \n }\n\n   \n  \n        </div>\n    )\n}\n\n","import React from 'react'\nimport {Card,Button} from 'react-bootstrap'\n\nimport './Footer.css'\nexport default function Footer() {\n    return (\n        <div className=\"Footer\" > \n            <Card className=\"Footer_Card\"> \n \n  <Card.Body >\n   \n    <Card.Text>\n    Copyright Reserved @DEMO\n\n    </Card.Text>\n    \n  </Card.Body>\n</Card>\n        </div>\n    )\n}\n"," \nimport React, { Component ,useState,useEffect} from 'react'\nimport Registration from '../Registration/Registration'\nimport './home.css'\n \nimport { Col,Row,Button,Container , Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport {Link} from 'react-router-dom'\n import Footer from '../Layout/Footer/Footer'\nimport { useFormik } from 'formik'\n\nimport { setUserData } from '../Slices/RegSlice'\nimport { useSelector} from 'react-redux'\n\n\nexport default function Home() {\n\n    const validate_email=RegExp(\"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,64}\");\n    const validate_password=RegExp(\"[A-Z0-9a-z._%+-]{8,64}\");\n\nconst history=useHistory();\n\nconst selector=useSelector(state=>state.userdata)\n \n\nconst redirectToReg=()=>{\nhistory.push('/Registration')\n}\n\n\nlet [UserData,setUserData]=useState({});\n\nconst validateSubmit=(ContactData)=>{\n\n    const errors={};\n if (!ContactData.email)\n {\n        errors.email=\"Email Can not be blank\"\n }\n else if( !validate_email.test(ContactData.email))\n {\n     errors.email=\"REGEXP ERR\"\n \n }\n if (!ContactData.pass)\n {\n        errors.pass=\"Password Can not be blank\"\n }\n else if( ContactData.pass.length<5)\n {\n     errors.pass=\"password too short. should be at least 5 characters\"\n \n }\n\n\n\n return errors\n}\n\n\n\n\nconst formik=useFormik({\n    initialValues:{\n            email:\"\",\n            pass:\"\"\n\n    },\n    validate:validateSubmit,\n    onSubmit:(values)=>{\n            console.log(values);\n \n\n\n    }\n\n\n});\n \n\n\n\n\n\n \n\n\n\n    return (\n        <div style={{width:\"100%\"}}>\n \n \n            <Row className=\"Home_Row\">\n<Col className=\"Home_Row_col1\" sm={12} lg={4} md={4} > </Col>\n<Col className=\"Home_Row_col2\" sm={12} lg={8} md={8}>\n<Container className=\"Home_Row_col2_Container\" >  <h2> Welcome Back</h2>\n<p><span className=\"Home_Row_col2_Container_span\">Sign in to your account</span></p>\n<Form onSubmit={formik.handleSubmit}>\n<Form.Group className=\"mb-3\" controlId=\"email\">\n<Form.Label>Email address</Form.Label>\n<Form.Control type=\"email\" placeholder=\"name@example.com\" style={{height:\"60px\"}} onChange={formik.handleChange}/>\n</Form.Group>\n<p>\n    {formik.touched.email && formik.errors.email ? <span>{formik.errors.email}</span> : \"\"}\n</p>\n<Form.Group className=\"mb-3\" controlId=\"pass\">\n<Form.Label>Password</Form.Label>\n<Form.Control type=\"password\" placeholder=\"Password\" style={{height:\"60px\"}} onChange={formik.handleChange}/>\n</Form.Group>\n<p>\n    {formik.touched.pass && formik.errors.pass ? <span>{formik.errors.pass}</span> : \"\"}\n</p>\n\n\n<Button variant=\"outline-success\" type=\"submit\" className=\"Home_Row_col2_Container_Form_ButtonSubmit\">\nSubmit\n</Button>\n{/* <p/> <span onClick={redirectToReg}> Or, Sign up here </span>  */}\n<p/> Or, <Link to='/Registration' style={{textDecoration:\"none\"}}> Sign up here </Link> \n</Form>\n\n</Container>\n</Col>\n\n</Row>\n<Footer/>\n        </div>\n    )\n}\n","import React from 'react'\nimport {setTestSliceData} from '../Slices/TestSlice'\nimport { useDispatch ,useSelector} from 'react-redux'\nimport {Button} from 'react-bootstrap'\n\nexport default function RegForm2(props) {\n    let propData=props.data\n    const selector=useSelector(state=>state.TestReducer)\n    \n    console.log(selector);\n    return (\n        <div>\n \n        \n        <span>Details Taken</span>\n      \n    <p/>   <Button variant=\"outline-primary\" > CLICK</Button>\n\n<div style={{marginTop:\"40px\" }}>\n    <p> FirstName: {selector.fname}</p>\n    <p> LastName: {selector.lname}</p>\n    <p> Email: {selector.email}</p>\n    <p> Phone: {selector.phone}</p>\n    <p> City: {selector.city}</p>\n    <p> State: {selector.state}</p>\n    <p> Zipcode: {selector.zip}</p>\n</div>\n\n        </div>\n    )\n}\n","import React,{useState,useEffect} from 'react'\nimport { Col,Row,Button,Container , Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport {Link} from 'react-router-dom'\nimport {useFormik} from 'formik'\nimport './Registration.css'\nimport RegForm2 from './RegForm2'\n\nimport { setUserData } from '../Slices/RegSlice'\nimport{ setTestSliceData} from '../Slices/TestSlice'\nimport { useDispatch ,useSelector} from 'react-redux'\n\n\nexport default function RegForm1( ) {\n\n    let history=useHistory()\n \n    let Goto=()=>{\n            history.push('/RegForm2')\n\n    }\n     //state=>userdata comes from Store\nlet ReduxData1=useSelector(state=>state.userdata)\n//  console.log(ReduxData1);\n \n \n \n\nconst dispatch=useDispatch()\n\n\n const formik=useFormik({\n  initialValues:{\n    // fname:\"\",\n    // lname:\"\",\n    // email:\"\",\n    // phone:\"\",\n    // pass:\"\",\n    state:\"\",\n    city:\"\",\n    zip:\"\",\n    formCounter:\"2\"\n         \n  },\n  validate:\"\",\n  onSubmit:(values)=>{\n  console.log(values);\n  \n  // dispatch(setUserData(values))\n dispatch(setTestSliceData(values))\n  \n  }\n});\n\n\n\n\n\n\n\n\n    return (\n         <div > \n \n             \n                  {/* {propData1==1 ?   */}\n                  <div >\n\n                \n                    <Container className=\"Registration_Container\"> \n            <Row className=\"Registration_Container_Row\">\n            <h1>Step 2</h1>\n                 <Form onSubmit={formik.handleSubmit}>  \n\n\n  <Form.Group className=\"mb-3\" controlId=\"state\">\n    <Form.Label>State</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter State\" onChange={formik.handleChange}/>\n \n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"city\">\n    <Form.Label>City</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter City\" onChange={formik.handleChange}/>\n \n  </Form.Group>\n\n\n  <Form.Group className=\"mb-3\" controlId=\"zip\">\n    <Form.Label>Zipcode</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Zipcode\"onChange={formik.handleChange} />\n    \n  </Form.Group>\n  \n  <Button className=\"BtnSubmit\" variant=\"outline-success\" type=\"submit\">\n    Submit\n  </Button>\n  \n  \n</Form> \n<Button className=\"BtnNext\" variant=\"outline-primary\" type=\"click \"onClick={Goto} >\n    {/*onClick={()=>{setPropData(propData+1)}}  */}\n    Next \n  </Button> \n            </Row>\n            </Container>\n            <Button className=\"BtnNext\" variant=\"outline-warning\" type=\"click\" onClick={Goto}>\n    Go Back To Home\n  </Button>  \n           </div>\n                    {/* : \"\"} */}\n                  \n             \n                   \n        </div>\n    )\n}\n","import logo from './logo.svg';\nimport './App.css';\n \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Registration from './Components/Registration/Registration'\nimport Home from './Components/home/Home';\n import Footer from './Components/Layout/Footer/Footer';\nimport {Route,Redirect,Switch,BrowserRouter as Router} from 'react-router-dom'\n// import Routes from './Routes/Routes';\nimport RegForm1 from './Components/Registration/RegForm1';\nimport RegForm2 from './Components/Registration/RegForm2';\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n        <Router>\n                <Switch>\n                    \n                    <Route  exact path=\"/\" component={Home}></Route>\n                    <Route path=\"/Registration\" component={Registration}></Route>\n                      <Route path=\"/RegForm1/\" component={RegForm1}></Route>\n                      <Route path=\"/RegForm2\" component={RegForm2}></Route>\n                </Switch>\n            </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux'\nimport store from './Store/Store'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n \n \n\nReactDOM.render(\n  <React.StrictMode>\n\n<Provider  store={store}>\n    <App />\n    </Provider>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}